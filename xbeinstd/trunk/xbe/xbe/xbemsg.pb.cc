// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "xbemsg.pb.h"
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>

namespace xbe {
namespace messages {

namespace {

const ::google::protobuf::Descriptor* XbeMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  XbeMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* Header_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Header_reflection_ = NULL;
const ::google::protobuf::Descriptor* Error_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Error_reflection_ = NULL;
const ::google::protobuf::Descriptor* Task_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Task_reflection_ = NULL;
const ::google::protobuf::Descriptor* Task_Env_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Task_Env_reflection_ = NULL;
const ::google::protobuf::Descriptor* Execute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Execute_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecuteAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecuteAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecuteNak_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecuteNak_reflection_ = NULL;
const ::google::protobuf::Descriptor* StatusReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StatusReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Finished_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Finished_reflection_ = NULL;
const ::google::protobuf::Descriptor* FinishedAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FinishedAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* Failed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Failed_reflection_ = NULL;
const ::google::protobuf::Descriptor* FailedAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FailedAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* Shutdown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shutdown_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShutdownAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShutdownAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* Terminate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Terminate_reflection_ = NULL;
const ::google::protobuf::Descriptor* TerminateAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TerminateAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* LifeSign_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LifeSign_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ExecuteNakReason_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* StatusCode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* FailReason_descriptor_ = NULL;

}  // namespace


void protobuf_BuildDesc_xbemsg_2eproto_AssignGlobalDescriptors(const ::google::protobuf::FileDescriptor* file) {
  XbeMessage_descriptor_ = file->message_type(0);
  XbeMessage::default_instance_ = new XbeMessage();
  static const int XbeMessage_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, execute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, execute_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, execute_nak_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, status_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, finished_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, finished_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, failed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, failed_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, shutdown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, shutdown_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, terminate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, terminate_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, life_sign_),
  };
  XbeMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      XbeMessage_descriptor_,
      XbeMessage::default_instance_,
      XbeMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XbeMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(XbeMessage));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    XbeMessage_descriptor_, XbeMessage::default_instance_);
  Header_descriptor_ = file->message_type(1);
  Header::default_instance_ = new Header();
  static const int Header_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, conversation_id_),
  };
  Header_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Header_descriptor_,
      Header::default_instance_,
      Header_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Header));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Header_descriptor_, Header::default_instance_);
  Error_descriptor_ = file->message_type(2);
  Error::default_instance_ = new Error();
  static const int Error_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, message_),
  };
  Error_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Error_descriptor_,
      Error::default_instance_,
      Error_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Error));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Error_descriptor_, Error::default_instance_);
  Task_descriptor_ = file->message_type(3);
  Task::default_instance_ = new Task();
  static const int Task_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, executable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, argument_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, env_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, stdin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, stdout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, stderr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, wd_),
  };
  Task_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Task_descriptor_,
      Task::default_instance_,
      Task_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Task));
  Task_Env_descriptor_ = Task_descriptor_->nested_type(0);
  Task_Env::default_instance_ = new Task_Env();
  static const int Task_Env_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task_Env, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task_Env, val_),
  };
  Task_Env_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Task_Env_descriptor_,
      Task_Env::default_instance_,
      Task_Env_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task_Env, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Task_Env, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Task_Env));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Task_Env_descriptor_, Task_Env::default_instance_);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Task_descriptor_, Task::default_instance_);
  Execute_descriptor_ = file->message_type(4);
  Execute::default_instance_ = new Execute();
  static const int Execute_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Execute, main_task_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Execute, status_task_),
  };
  Execute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Execute_descriptor_,
      Execute::default_instance_,
      Execute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Execute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Execute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Execute));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Execute_descriptor_, Execute::default_instance_);
  ExecuteAck_descriptor_ = file->message_type(5);
  ExecuteAck::default_instance_ = new ExecuteAck();
  static const int ExecuteAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteAck, task_),
  };
  ExecuteAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExecuteAck_descriptor_,
      ExecuteAck::default_instance_,
      ExecuteAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(ExecuteAck));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExecuteAck_descriptor_, ExecuteAck::default_instance_);
  ExecuteNak_descriptor_ = file->message_type(6);
  ExecuteNak::default_instance_ = new ExecuteNak();
  static const int ExecuteNak_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteNak, reason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteNak, message_),
  };
  ExecuteNak_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExecuteNak_descriptor_,
      ExecuteNak::default_instance_,
      ExecuteNak_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteNak, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteNak, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(ExecuteNak));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExecuteNak_descriptor_, ExecuteNak::default_instance_);
  StatusReq_descriptor_ = file->message_type(7);
  StatusReq::default_instance_ = new StatusReq();
  static const int StatusReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusReq, execute_status_task_),
  };
  StatusReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StatusReq_descriptor_,
      StatusReq::default_instance_,
      StatusReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(StatusReq));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StatusReq_descriptor_, StatusReq::default_instance_);
  Status_descriptor_ = file->message_type(8);
  Status::default_instance_ = new Status();
  static const int Status_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Status, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Status, status_task_exit_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Status, stdout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Status, stderr_),
  };
  Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Status_descriptor_,
      Status::default_instance_,
      Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Status));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Status_descriptor_, Status::default_instance_);
  Finished_descriptor_ = file->message_type(9);
  Finished::default_instance_ = new Finished();
  static const int Finished_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Finished, exitcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Finished, task_),
  };
  Finished_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Finished_descriptor_,
      Finished::default_instance_,
      Finished_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Finished, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Finished, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Finished));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Finished_descriptor_, Finished::default_instance_);
  FinishedAck_descriptor_ = file->message_type(10);
  FinishedAck::default_instance_ = new FinishedAck();
  static const int FinishedAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishedAck, task_),
  };
  FinishedAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FinishedAck_descriptor_,
      FinishedAck::default_instance_,
      FinishedAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishedAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishedAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(FinishedAck));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FinishedAck_descriptor_, FinishedAck::default_instance_);
  Failed_descriptor_ = file->message_type(11);
  Failed::default_instance_ = new Failed();
  static const int Failed_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Failed, task_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Failed, reason_),
  };
  Failed_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Failed_descriptor_,
      Failed::default_instance_,
      Failed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Failed, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Failed, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Failed));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Failed_descriptor_, Failed::default_instance_);
  FailedAck_descriptor_ = file->message_type(12);
  FailedAck::default_instance_ = new FailedAck();
  static const int FailedAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailedAck, task_),
  };
  FailedAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FailedAck_descriptor_,
      FailedAck::default_instance_,
      FailedAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailedAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FailedAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(FailedAck));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FailedAck_descriptor_, FailedAck::default_instance_);
  Shutdown_descriptor_ = file->message_type(13);
  Shutdown::default_instance_ = new Shutdown();
  static const int Shutdown_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shutdown, reason_),
  };
  Shutdown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Shutdown_descriptor_,
      Shutdown::default_instance_,
      Shutdown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shutdown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shutdown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Shutdown));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Shutdown_descriptor_, Shutdown::default_instance_);
  ShutdownAck_descriptor_ = file->message_type(14);
  ShutdownAck::default_instance_ = new ShutdownAck();
  static const int ShutdownAck_offsets_[1] = {
  };
  ShutdownAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShutdownAck_descriptor_,
      ShutdownAck::default_instance_,
      ShutdownAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShutdownAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShutdownAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(ShutdownAck));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShutdownAck_descriptor_, ShutdownAck::default_instance_);
  Terminate_descriptor_ = file->message_type(15);
  Terminate::default_instance_ = new Terminate();
  static const int Terminate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Terminate, task_),
  };
  Terminate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Terminate_descriptor_,
      Terminate::default_instance_,
      Terminate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Terminate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Terminate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Terminate));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Terminate_descriptor_, Terminate::default_instance_);
  TerminateAck_descriptor_ = file->message_type(16);
  TerminateAck::default_instance_ = new TerminateAck();
  static const int TerminateAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TerminateAck, task_),
  };
  TerminateAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TerminateAck_descriptor_,
      TerminateAck::default_instance_,
      TerminateAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TerminateAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TerminateAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(TerminateAck));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TerminateAck_descriptor_, TerminateAck::default_instance_);
  LifeSign_descriptor_ = file->message_type(17);
  LifeSign::default_instance_ = new LifeSign();
  static const int LifeSign_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LifeSign, tstamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LifeSign, status_),
  };
  LifeSign_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LifeSign_descriptor_,
      LifeSign::default_instance_,
      LifeSign_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LifeSign, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LifeSign, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(LifeSign));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LifeSign_descriptor_, LifeSign::default_instance_);
  ErrorCode_descriptor_ = file->enum_type(0);
  ExecuteNakReason_descriptor_ = file->enum_type(1);
  StatusCode_descriptor_ = file->enum_type(2);
  FailReason_descriptor_ = file->enum_type(3);
  XbeMessage::default_instance_->InitAsDefaultInstance();
  Header::default_instance_->InitAsDefaultInstance();
  Error::default_instance_->InitAsDefaultInstance();
  Task::default_instance_->InitAsDefaultInstance();
  Task_Env::default_instance_->InitAsDefaultInstance();
  Execute::default_instance_->InitAsDefaultInstance();
  ExecuteAck::default_instance_->InitAsDefaultInstance();
  ExecuteNak::default_instance_->InitAsDefaultInstance();
  StatusReq::default_instance_->InitAsDefaultInstance();
  Status::default_instance_->InitAsDefaultInstance();
  Finished::default_instance_->InitAsDefaultInstance();
  FinishedAck::default_instance_->InitAsDefaultInstance();
  Failed::default_instance_->InitAsDefaultInstance();
  FailedAck::default_instance_->InitAsDefaultInstance();
  Shutdown::default_instance_->InitAsDefaultInstance();
  ShutdownAck::default_instance_->InitAsDefaultInstance();
  Terminate::default_instance_->InitAsDefaultInstance();
  TerminateAck::default_instance_->InitAsDefaultInstance();
  LifeSign::default_instance_->InitAsDefaultInstance();
}

void protobuf_BuildDesc_xbemsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;
  ::google::protobuf::DescriptorPool* pool =
    ::google::protobuf::DescriptorPool::internal_generated_pool();

  pool->InternalBuildGeneratedFile(
    "\n\014xbemsg.proto\022\014xbe.messages\"\302\005\n\nXbeMess"
    "age\022$\n\006header\030\001 \002(\0132\024.xbe.messages.Heade"
    "r\022\"\n\005error\030\002 \001(\0132\023.xbe.messages.Error\022&\n"
    "\007execute\030\003 \001(\0132\025.xbe.messages.Execute\022-\n"
    "\013execute_ack\030\004 \001(\0132\030.xbe.messages.Execut"
    "eAck\022-\n\013execute_nak\030\005 \001(\0132\030.xbe.messages"
    ".ExecuteNak\022+\n\nstatus_req\030\006 \001(\0132\027.xbe.me"
    "ssages.StatusReq\022$\n\006status\030\007 \001(\0132\024.xbe.m"
    "essages.Status\022(\n\010finished\030\010 \001(\0132\026.xbe.m"
    "essages.Finished\022/\n\014finished_ack\030\t \001(\0132\031"
    ".xbe.messages.FinishedAck\022$\n\006failed\030\n \001("
    "\0132\024.xbe.messages.Failed\022+\n\nfailed_ack\030\013 "
    "\001(\0132\027.xbe.messages.FailedAck\022(\n\010shutdown"
    "\030\014 \001(\0132\026.xbe.messages.Shutdown\022/\n\014shutdo"
    "wn_ack\030\r \001(\0132\031.xbe.messages.ShutdownAck\022"
    "*\n\tterminate\030\016 \001(\0132\027.xbe.messages.Termin"
    "ate\0221\n\rterminate_ack\030\017 \001(\0132\032.xbe.message"
    "s.TerminateAck\022)\n\tlife_sign\030\020 \001(\0132\026.xbe."
    "messages.LifeSign\"!\n\006Header\022\027\n\017conversat"
    "ion_id\030\001 \002(\014\"?\n\005Error\022%\n\004code\030\001 \002(\0162\027.xb"
    "e.messages.ErrorCode\022\017\n\007message\030\002 \001(\t\"\260\001"
    "\n\004Task\022\022\n\nexecutable\030\001 \002(\t\022\020\n\010argument\030\002"
    " \003(\t\022#\n\003env\030\003 \003(\0132\026.xbe.messages.Task.En"
    "v\022\r\n\005stdin\030\006 \001(\t\022\016\n\006stdout\030\007 \001(\t\022\016\n\006stde"
    "rr\030\010 \001(\t\022\r\n\002wd\030\t \001(\t:\001/\032\037\n\003Env\022\013\n\003key\030\001 "
    "\002(\t\022\013\n\003val\030\002 \002(\t\"Y\n\007Execute\022%\n\tmain_task"
    "\030\001 \001(\0132\022.xbe.messages.Task\022\'\n\013status_tas"
    "k\030\002 \001(\0132\022.xbe.messages.Task\"\032\n\nExecuteAc"
    "k\022\014\n\004task\030\001 \001(\005\"M\n\nExecuteNak\022.\n\006reason\030"
    "\001 \002(\0162\036.xbe.messages.ExecuteNakReason\022\017\n"
    "\007message\030\002 \001(\t\"(\n\tStatusReq\022\033\n\023execute_s"
    "tatus_task\030\001 \001(\010\"q\n\006Status\022(\n\006status\030\001 \002"
    "(\0162\030.xbe.messages.StatusCode\022\035\n\025status_t"
    "ask_exit_code\030\002 \001(\005\022\016\n\006stdout\030\003 \001(\014\022\016\n\006s"
    "tderr\030\004 \001(\014\"*\n\010Finished\022\020\n\010exitcode\030\001 \002("
    "\005\022\014\n\004task\030\002 \001(\005\"\033\n\013FinishedAck\022\014\n\004task\030\001"
    " \001(\005\"@\n\006Failed\022\014\n\004task\030\001 \001(\005\022(\n\006reason\030\002"
    " \001(\0162\030.xbe.messages.FailReason\"\031\n\tFailed"
    "Ack\022\014\n\004task\030\001 \001(\005\"\032\n\010Shutdown\022\016\n\006reason\030"
    "\001 \001(\t\"\r\n\013ShutdownAck\"\031\n\tTerminate\022\014\n\004tas"
    "k\030\001 \001(\005\"\034\n\014TerminateAck\022\014\n\004task\030\001 \001(\005\"D\n"
    "\010LifeSign\022\016\n\006tstamp\030\001 \002(\004\022(\n\006status\030\002 \001("
    "\0162\030.xbe.messages.StatusCode*\036\n\tErrorCode"
    "\022\021\n\rUNKNOWN_ERROR\020\000*9\n\020ExecuteNakReason\022"
    "\022\n\016UNKNOWN_REASON\020\000\022\021\n\rRESOURCE_BUSY\020\001*="
    "\n\nStatusCode\022\010\n\004IDLE\020\000\022\013\n\007RUNNING\020\001\022\014\n\010F"
    "INISHED\020\002\022\n\n\006FAILED\020\003*\031\n\nFailReason\022\013\n\007U"
    "NKNOWN\020\000", 1888,
  &protobuf_BuildDesc_xbemsg_2eproto_AssignGlobalDescriptors);
}

// Force BuildDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_xbemsg_2eproto {
  StaticDescriptorInitializer_xbemsg_2eproto() {
    protobuf_BuildDesc_xbemsg_2eproto();
  }
} static_descriptor_initializer_xbemsg_2eproto_;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  if (ErrorCode_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return ErrorCode_descriptor_;
}
bool ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ExecuteNakReason_descriptor() {
  if (ExecuteNakReason_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return ExecuteNakReason_descriptor_;
}
bool ExecuteNakReason_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* StatusCode_descriptor() {
  if (StatusCode_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return StatusCode_descriptor_;
}
bool StatusCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FailReason_descriptor() {
  if (FailReason_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return FailReason_descriptor_;
}
bool FailReason_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

















XbeMessage::XbeMessage()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    header_(NULL),
    error_(NULL),
    execute_(NULL),
    execute_ack_(NULL),
    execute_nak_(NULL),
    status_req_(NULL),
    status_(NULL),
    finished_(NULL),
    finished_ack_(NULL),
    failed_(NULL),
    failed_ack_(NULL),
    shutdown_(NULL),
    shutdown_ack_(NULL),
    terminate_(NULL),
    terminate_ack_(NULL),
    life_sign_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void XbeMessage::InitAsDefaultInstance() {  header_ = const_cast< ::xbe::messages::Header*>(&::xbe::messages::Header::default_instance());
  error_ = const_cast< ::xbe::messages::Error*>(&::xbe::messages::Error::default_instance());
  execute_ = const_cast< ::xbe::messages::Execute*>(&::xbe::messages::Execute::default_instance());
  execute_ack_ = const_cast< ::xbe::messages::ExecuteAck*>(&::xbe::messages::ExecuteAck::default_instance());
  execute_nak_ = const_cast< ::xbe::messages::ExecuteNak*>(&::xbe::messages::ExecuteNak::default_instance());
  status_req_ = const_cast< ::xbe::messages::StatusReq*>(&::xbe::messages::StatusReq::default_instance());
  status_ = const_cast< ::xbe::messages::Status*>(&::xbe::messages::Status::default_instance());
  finished_ = const_cast< ::xbe::messages::Finished*>(&::xbe::messages::Finished::default_instance());
  finished_ack_ = const_cast< ::xbe::messages::FinishedAck*>(&::xbe::messages::FinishedAck::default_instance());
  failed_ = const_cast< ::xbe::messages::Failed*>(&::xbe::messages::Failed::default_instance());
  failed_ack_ = const_cast< ::xbe::messages::FailedAck*>(&::xbe::messages::FailedAck::default_instance());
  shutdown_ = const_cast< ::xbe::messages::Shutdown*>(&::xbe::messages::Shutdown::default_instance());
  shutdown_ack_ = const_cast< ::xbe::messages::ShutdownAck*>(&::xbe::messages::ShutdownAck::default_instance());
  terminate_ = const_cast< ::xbe::messages::Terminate*>(&::xbe::messages::Terminate::default_instance());
  terminate_ack_ = const_cast< ::xbe::messages::TerminateAck*>(&::xbe::messages::TerminateAck::default_instance());
  life_sign_ = const_cast< ::xbe::messages::LifeSign*>(&::xbe::messages::LifeSign::default_instance());
}

XbeMessage::XbeMessage(const XbeMessage& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    header_(NULL),
    error_(NULL),
    execute_(NULL),
    execute_ack_(NULL),
    execute_nak_(NULL),
    status_req_(NULL),
    status_(NULL),
    finished_(NULL),
    finished_ack_(NULL),
    failed_(NULL),
    failed_ack_(NULL),
    shutdown_(NULL),
    shutdown_ack_(NULL),
    terminate_(NULL),
    terminate_ack_(NULL),
    life_sign_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

XbeMessage::~XbeMessage() {
  if (this != default_instance_) {
    delete header_;
    delete error_;
    delete execute_;
    delete execute_ack_;
    delete execute_nak_;
    delete status_req_;
    delete status_;
    delete finished_;
    delete finished_ack_;
    delete failed_;
    delete failed_ack_;
    delete shutdown_;
    delete shutdown_ack_;
    delete terminate_;
    delete terminate_ack_;
    delete life_sign_;
  }
}

const ::google::protobuf::Descriptor* XbeMessage::descriptor() {
  if (XbeMessage_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return XbeMessage_descriptor_;
}

const XbeMessage& XbeMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

XbeMessage* XbeMessage::default_instance_ = NULL;

XbeMessage* XbeMessage::New() const {
  return new XbeMessage;
}

const ::google::protobuf::Descriptor* XbeMessage::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* XbeMessage::GetReflection() const {
  if (XbeMessage_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return XbeMessage_reflection_;
}

// ===================================================================

const ::std::string Header::_default_conversation_id_;
Header::Header()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    conversation_id_(const_cast< ::std::string*>(&_default_conversation_id_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Header::InitAsDefaultInstance() {}

Header::Header(const Header& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    conversation_id_(const_cast< ::std::string*>(&_default_conversation_id_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Header::~Header() {
  if (conversation_id_ != &_default_conversation_id_) {
    delete conversation_id_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Header::descriptor() {
  if (Header_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Header_descriptor_;
}

const Header& Header::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

Header* Header::default_instance_ = NULL;

Header* Header::New() const {
  return new Header;
}

const ::google::protobuf::Descriptor* Header::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Header::GetReflection() const {
  if (Header_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Header_reflection_;
}

// ===================================================================


const ::std::string Error::_default_message_;
Error::Error()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    code_(0),
    message_(const_cast< ::std::string*>(&_default_message_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Error::InitAsDefaultInstance() {}

Error::Error(const Error& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    code_(0),
    message_(const_cast< ::std::string*>(&_default_message_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Error::~Error() {
  if (message_ != &_default_message_) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Error::descriptor() {
  if (Error_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Error_descriptor_;
}

const Error& Error::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

Error* Error::default_instance_ = NULL;

Error* Error::New() const {
  return new Error;
}

const ::google::protobuf::Descriptor* Error::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Error::GetReflection() const {
  if (Error_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Error_reflection_;
}

// ===================================================================

const ::std::string Task_Env::_default_key_;
const ::std::string Task_Env::_default_val_;
Task_Env::Task_Env()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    key_(const_cast< ::std::string*>(&_default_key_)),
    val_(const_cast< ::std::string*>(&_default_val_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Task_Env::InitAsDefaultInstance() {}

Task_Env::Task_Env(const Task_Env& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    key_(const_cast< ::std::string*>(&_default_key_)),
    val_(const_cast< ::std::string*>(&_default_val_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Task_Env::~Task_Env() {
  if (key_ != &_default_key_) {
    delete key_;
  }
  if (val_ != &_default_val_) {
    delete val_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Task_Env::descriptor() {
  if (Task_Env_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Task_Env_descriptor_;
}

const Task_Env& Task_Env::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

Task_Env* Task_Env::default_instance_ = NULL;

Task_Env* Task_Env::New() const {
  return new Task_Env;
}

const ::google::protobuf::Descriptor* Task_Env::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Task_Env::GetReflection() const {
  if (Task_Env_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Task_Env_reflection_;
}

// -------------------------------------------------------------------

const ::std::string Task::_default_executable_;


const ::std::string Task::_default_stdin_;
const ::std::string Task::_default_stdout_;
const ::std::string Task::_default_stderr_;
const ::std::string Task::_default_wd_("/");
Task::Task()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    executable_(const_cast< ::std::string*>(&_default_executable_)),
    stdin_(const_cast< ::std::string*>(&_default_stdin_)),
    stdout_(const_cast< ::std::string*>(&_default_stdout_)),
    stderr_(const_cast< ::std::string*>(&_default_stderr_)),
    wd_(const_cast< ::std::string*>(&_default_wd_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Task::InitAsDefaultInstance() {}

Task::Task(const Task& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    executable_(const_cast< ::std::string*>(&_default_executable_)),
    stdin_(const_cast< ::std::string*>(&_default_stdin_)),
    stdout_(const_cast< ::std::string*>(&_default_stdout_)),
    stderr_(const_cast< ::std::string*>(&_default_stderr_)),
    wd_(const_cast< ::std::string*>(&_default_wd_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Task::~Task() {
  if (executable_ != &_default_executable_) {
    delete executable_;
  }
  if (stdin_ != &_default_stdin_) {
    delete stdin_;
  }
  if (stdout_ != &_default_stdout_) {
    delete stdout_;
  }
  if (stderr_ != &_default_stderr_) {
    delete stderr_;
  }
  if (wd_ != &_default_wd_) {
    delete wd_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Task::descriptor() {
  if (Task_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Task_descriptor_;
}

const Task& Task::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

Task* Task::default_instance_ = NULL;

Task* Task::New() const {
  return new Task;
}

const ::google::protobuf::Descriptor* Task::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Task::GetReflection() const {
  if (Task_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Task_reflection_;
}

// ===================================================================



Execute::Execute()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    main_task_(NULL),
    status_task_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Execute::InitAsDefaultInstance() {  main_task_ = const_cast< ::xbe::messages::Task*>(&::xbe::messages::Task::default_instance());
  status_task_ = const_cast< ::xbe::messages::Task*>(&::xbe::messages::Task::default_instance());
}

Execute::Execute(const Execute& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    main_task_(NULL),
    status_task_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Execute::~Execute() {
  if (this != default_instance_) {
    delete main_task_;
    delete status_task_;
  }
}

const ::google::protobuf::Descriptor* Execute::descriptor() {
  if (Execute_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Execute_descriptor_;
}

const Execute& Execute::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

Execute* Execute::default_instance_ = NULL;

Execute* Execute::New() const {
  return new Execute;
}

const ::google::protobuf::Descriptor* Execute::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Execute::GetReflection() const {
  if (Execute_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Execute_reflection_;
}

// ===================================================================


ExecuteAck::ExecuteAck()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    task_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void ExecuteAck::InitAsDefaultInstance() {}

ExecuteAck::ExecuteAck(const ExecuteAck& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    task_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

ExecuteAck::~ExecuteAck() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* ExecuteAck::descriptor() {
  if (ExecuteAck_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return ExecuteAck_descriptor_;
}

const ExecuteAck& ExecuteAck::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

ExecuteAck* ExecuteAck::default_instance_ = NULL;

ExecuteAck* ExecuteAck::New() const {
  return new ExecuteAck;
}

const ::google::protobuf::Descriptor* ExecuteAck::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* ExecuteAck::GetReflection() const {
  if (ExecuteAck_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return ExecuteAck_reflection_;
}

// ===================================================================


const ::std::string ExecuteNak::_default_message_;
ExecuteNak::ExecuteNak()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    reason_(0),
    message_(const_cast< ::std::string*>(&_default_message_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void ExecuteNak::InitAsDefaultInstance() {}

ExecuteNak::ExecuteNak(const ExecuteNak& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    reason_(0),
    message_(const_cast< ::std::string*>(&_default_message_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

ExecuteNak::~ExecuteNak() {
  if (message_ != &_default_message_) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* ExecuteNak::descriptor() {
  if (ExecuteNak_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return ExecuteNak_descriptor_;
}

const ExecuteNak& ExecuteNak::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

ExecuteNak* ExecuteNak::default_instance_ = NULL;

ExecuteNak* ExecuteNak::New() const {
  return new ExecuteNak;
}

const ::google::protobuf::Descriptor* ExecuteNak::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* ExecuteNak::GetReflection() const {
  if (ExecuteNak_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return ExecuteNak_reflection_;
}

// ===================================================================


StatusReq::StatusReq()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    execute_status_task_(false) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void StatusReq::InitAsDefaultInstance() {}

StatusReq::StatusReq(const StatusReq& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    execute_status_task_(false) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

StatusReq::~StatusReq() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* StatusReq::descriptor() {
  if (StatusReq_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return StatusReq_descriptor_;
}

const StatusReq& StatusReq::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

StatusReq* StatusReq::default_instance_ = NULL;

StatusReq* StatusReq::New() const {
  return new StatusReq;
}

const ::google::protobuf::Descriptor* StatusReq::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* StatusReq::GetReflection() const {
  if (StatusReq_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return StatusReq_reflection_;
}

// ===================================================================



const ::std::string Status::_default_stdout_;
const ::std::string Status::_default_stderr_;
Status::Status()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    status_(0),
    status_task_exit_code_(0),
    stdout_(const_cast< ::std::string*>(&_default_stdout_)),
    stderr_(const_cast< ::std::string*>(&_default_stderr_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Status::InitAsDefaultInstance() {}

Status::Status(const Status& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    status_(0),
    status_task_exit_code_(0),
    stdout_(const_cast< ::std::string*>(&_default_stdout_)),
    stderr_(const_cast< ::std::string*>(&_default_stderr_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Status::~Status() {
  if (stdout_ != &_default_stdout_) {
    delete stdout_;
  }
  if (stderr_ != &_default_stderr_) {
    delete stderr_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Status::descriptor() {
  if (Status_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Status_descriptor_;
}

const Status& Status::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

Status* Status::default_instance_ = NULL;

Status* Status::New() const {
  return new Status;
}

const ::google::protobuf::Descriptor* Status::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Status::GetReflection() const {
  if (Status_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Status_reflection_;
}

// ===================================================================



Finished::Finished()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    exitcode_(0),
    task_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Finished::InitAsDefaultInstance() {}

Finished::Finished(const Finished& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    exitcode_(0),
    task_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Finished::~Finished() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Finished::descriptor() {
  if (Finished_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Finished_descriptor_;
}

const Finished& Finished::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

Finished* Finished::default_instance_ = NULL;

Finished* Finished::New() const {
  return new Finished;
}

const ::google::protobuf::Descriptor* Finished::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Finished::GetReflection() const {
  if (Finished_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Finished_reflection_;
}

// ===================================================================


FinishedAck::FinishedAck()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    task_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void FinishedAck::InitAsDefaultInstance() {}

FinishedAck::FinishedAck(const FinishedAck& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    task_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

FinishedAck::~FinishedAck() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* FinishedAck::descriptor() {
  if (FinishedAck_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return FinishedAck_descriptor_;
}

const FinishedAck& FinishedAck::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

FinishedAck* FinishedAck::default_instance_ = NULL;

FinishedAck* FinishedAck::New() const {
  return new FinishedAck;
}

const ::google::protobuf::Descriptor* FinishedAck::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* FinishedAck::GetReflection() const {
  if (FinishedAck_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return FinishedAck_reflection_;
}

// ===================================================================



Failed::Failed()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    task_(0),
    reason_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Failed::InitAsDefaultInstance() {}

Failed::Failed(const Failed& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    task_(0),
    reason_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Failed::~Failed() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Failed::descriptor() {
  if (Failed_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Failed_descriptor_;
}

const Failed& Failed::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

Failed* Failed::default_instance_ = NULL;

Failed* Failed::New() const {
  return new Failed;
}

const ::google::protobuf::Descriptor* Failed::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Failed::GetReflection() const {
  if (Failed_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Failed_reflection_;
}

// ===================================================================


FailedAck::FailedAck()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    task_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void FailedAck::InitAsDefaultInstance() {}

FailedAck::FailedAck(const FailedAck& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    task_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

FailedAck::~FailedAck() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* FailedAck::descriptor() {
  if (FailedAck_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return FailedAck_descriptor_;
}

const FailedAck& FailedAck::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

FailedAck* FailedAck::default_instance_ = NULL;

FailedAck* FailedAck::New() const {
  return new FailedAck;
}

const ::google::protobuf::Descriptor* FailedAck::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* FailedAck::GetReflection() const {
  if (FailedAck_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return FailedAck_reflection_;
}

// ===================================================================

const ::std::string Shutdown::_default_reason_;
Shutdown::Shutdown()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    reason_(const_cast< ::std::string*>(&_default_reason_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Shutdown::InitAsDefaultInstance() {}

Shutdown::Shutdown(const Shutdown& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    reason_(const_cast< ::std::string*>(&_default_reason_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Shutdown::~Shutdown() {
  if (reason_ != &_default_reason_) {
    delete reason_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Shutdown::descriptor() {
  if (Shutdown_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Shutdown_descriptor_;
}

const Shutdown& Shutdown::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

Shutdown* Shutdown::default_instance_ = NULL;

Shutdown* Shutdown::New() const {
  return new Shutdown;
}

const ::google::protobuf::Descriptor* Shutdown::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Shutdown::GetReflection() const {
  if (Shutdown_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Shutdown_reflection_;
}

// ===================================================================

ShutdownAck::ShutdownAck()
  : ::google::protobuf::Message(),
    _cached_size_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void ShutdownAck::InitAsDefaultInstance() {}

ShutdownAck::ShutdownAck(const ShutdownAck& from)
  : ::google::protobuf::Message(),
    _cached_size_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

ShutdownAck::~ShutdownAck() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* ShutdownAck::descriptor() {
  if (ShutdownAck_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return ShutdownAck_descriptor_;
}

const ShutdownAck& ShutdownAck::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

ShutdownAck* ShutdownAck::default_instance_ = NULL;

ShutdownAck* ShutdownAck::New() const {
  return new ShutdownAck;
}

const ::google::protobuf::Descriptor* ShutdownAck::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* ShutdownAck::GetReflection() const {
  if (ShutdownAck_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return ShutdownAck_reflection_;
}

// ===================================================================


Terminate::Terminate()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    task_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Terminate::InitAsDefaultInstance() {}

Terminate::Terminate(const Terminate& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    task_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Terminate::~Terminate() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Terminate::descriptor() {
  if (Terminate_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Terminate_descriptor_;
}

const Terminate& Terminate::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

Terminate* Terminate::default_instance_ = NULL;

Terminate* Terminate::New() const {
  return new Terminate;
}

const ::google::protobuf::Descriptor* Terminate::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Terminate::GetReflection() const {
  if (Terminate_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return Terminate_reflection_;
}

// ===================================================================


TerminateAck::TerminateAck()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    task_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void TerminateAck::InitAsDefaultInstance() {}

TerminateAck::TerminateAck(const TerminateAck& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    task_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

TerminateAck::~TerminateAck() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* TerminateAck::descriptor() {
  if (TerminateAck_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return TerminateAck_descriptor_;
}

const TerminateAck& TerminateAck::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

TerminateAck* TerminateAck::default_instance_ = NULL;

TerminateAck* TerminateAck::New() const {
  return new TerminateAck;
}

const ::google::protobuf::Descriptor* TerminateAck::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* TerminateAck::GetReflection() const {
  if (TerminateAck_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return TerminateAck_reflection_;
}

// ===================================================================



LifeSign::LifeSign()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    tstamp_(GOOGLE_ULONGLONG(0)),
    status_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void LifeSign::InitAsDefaultInstance() {}

LifeSign::LifeSign(const LifeSign& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    tstamp_(GOOGLE_ULONGLONG(0)),
    status_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

LifeSign::~LifeSign() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* LifeSign::descriptor() {
  if (LifeSign_descriptor_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return LifeSign_descriptor_;
}

const LifeSign& LifeSign::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return *default_instance_;
}

LifeSign* LifeSign::default_instance_ = NULL;

LifeSign* LifeSign::New() const {
  return new LifeSign;
}

const ::google::protobuf::Descriptor* LifeSign::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* LifeSign::GetReflection() const {
  if (LifeSign_reflection_ == NULL) protobuf_BuildDesc_xbemsg_2eproto();
  return LifeSign_reflection_;
}

}  // namespace messages
}  // namespace xbe
