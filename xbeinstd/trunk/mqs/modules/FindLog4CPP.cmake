# -*- mode: cmake; -*-

# - Find the log4cpp library.
# Find the native log4cpp includes and library
# This module defines
#  LOG4CPP_INCLUDE_DIR, where to find jpeglib.h, etc.
#  LOG4CPP_LIBRARIES, the libraries needed to use LOG4CPP.
#  LOG4CPP_FOUND, If false, do not try to use LOG4CPP.
# also defined, but not for general use are
#  LOG4CPP_LIBRARY, where to find the LOG4CPP library.

IF( NOT LOG4CPP_HOME )
  SET(LOG4CPP_HOME $ENV{LOG4CPP_HOME})
ENDIF( NOT LOG4CPP_HOME )

FIND_PATH(LOG4CPP_INCLUDE_DIR log4cpp/Priority.hh
  PATHS ${CMAKE_INCLUDE_PATH} ${LOG4CPP_HOME} /usr/local/include /usr/include
  PATH_SUFFIXES include
)
SET(LOG4CPP_STATIC_INCLUDE_DIRS ${LOG4CPP_INCLUDE_DIR})

# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES
IF(WIN32)
  SET(CMAKE_FIND_LIBRARY_SUFFIXES .lib .a ${CMAKE_FIND_LIBRARY_SUFFIXES})
ELSE(WIN32)
  SET(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES})
ENDIF(WIN32)

SET(LOG4CPP_NAMES ${LOG4CPP_NAMES} log4cppD log4cpp)
FIND_LIBRARY(LOG4CPP_LIBRARY
  NAMES ${LOG4CPP_NAMES}
  PATHS ${CMAKE_INCLUDE_PATH} ${LOG4CPP_HOME} /usr/local/include /usr/include
  PATH_SUFFIXES lib
)
SET(LOG4CPP_STATIC_LIBRARIES LOG4CPP_LIBRARY)

message(STATUS "LIB: ${LOG4CPP_LIBRARY}, INC: ${LOG4CPP_INCLUDE_DIR}")

IF (LOG4CPP_LIBRARY AND LOG4CPP_INCLUDE_DIR)
    SET(LOG4CPP_LIBRARIES ${LOG4CPP_LIBRARY})
    SET(LOG4CPP_FOUND "YES")
ELSE (LOG4CPP_LIBRARY AND LOG4CPP_INCLUDE_DIR)
  SET(LOG4CPP_FOUND "NO")
ENDIF (LOG4CPP_LIBRARY AND LOG4CPP_INCLUDE_DIR)
    SET(LOG4CPP_FOUND "YES")


IF (LOG4CPP_FOUND)
   IF (NOT LOG4CPP_FIND_QUIETLY)
      MESSAGE(STATUS "Found LOG4CPP: ${LOG4CPP_LIBRARIES}")
   ENDIF (NOT LOG4CPP_FIND_QUIETLY)
ELSE (LOG4CPP_FOUND)
   IF (LOG4CPP_FIND_REQUIRED)
      MESSAGE(FATAL_ERROR "Could not find LOG4CPP library")
   ENDIF (LOG4CPP_FIND_REQUIRED)
ENDIF (LOG4CPP_FOUND)

# Deprecated declarations.
SET (NATIVE_LOG4CPP_INCLUDE_PATH ${LOG4CPP_INCLUDE_DIR} )
GET_FILENAME_COMPONENT (NATIVE_LOG4CPP_LIB_PATH ${LOG4CPP_LIBRARY} PATH)
GET_FILENAME_COMPONENT (LOG4CPP_STATIC_LIBRARIES ${LOG4CPP_LIBRARY} NAME)

SET(LOG4CPP_STATIC_LIBRARY_DIRS ${NATIVE_LOG4CPP_LIB_PATH})
SET(LOG4CPP_STATIC_LIBRARIES ${LOG4CPP_STATIC_LIBRARIES})

message(STATUS "LOG4CPP Libpath: ${LOG4CPP_STATIC_LIBRARIES}")
message(STATUS "Log4cpp-Libray: ${LOG4CPP_LIBRARY}")
message(STATUS "LOG4CPP: -I${LOG4CPP_STATIC_INCLUDE_DIRS} -L${LOG4CPP_STATIC_LIBRARY_DIRS} -l${LOG4CPP_STATIC_LIBRARIES}")

MARK_AS_ADVANCED(
  LOG4CPP_STATIC_LIBRARIES
  LOG4CPP_LIBRARY
  LOG4CPP_INCLUDE_DIR
  LOG4CPP_FOUND
)
