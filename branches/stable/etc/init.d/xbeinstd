#!/bin/sh
set -e

# /etc/init.d/xbeinstd: start and stop the XBE instance daemon

export PYTHONPATH="$PYTHONPATH":/root/xenbee/modules
daemon=/root/xenbee/bin/xbeinstd
logfile="/var/log/xenbee/xbeinstd.log"
pidfile="/var/run/xbeinstd.pid"
envfile="/var/run/xbeinstd.env"

test -x $daemon || exit 0

if test -f /etc/default/xbeinstd; then
    . /etc/default/xbeinstd
fi

. /lib/lsb/init-functions

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

function check_logfile() {
	logdir=`dirname $logfile`
	mkdir -p "$logdir"
	# empty the logfile
	:> "$logfile"
}

function save_environ() {
	if [ -n "$XBE_SERVER" ]; then
		:> "$envfile"
		echo "export XBE_SERVER=$XBE_SERVER" >> "$envfile"
		echo "export XBE_UUID=$XBE_UUID" >> "$envfile"
	fi
}

function load_environ() {
	if [ -z "$XBE_SERVER" -a -r "$envfile" ]; then
		source "$envfile"
	fi
}

case "$1" in
  start)
	log_begin_msg "Starting XenBEE instance daemon..."
	check_logfile
	save_environ
	"$daemon" start --pidfile "$pidfile" $XBEINSTD_OPTS || log_end_msg 1
	log_end_msg 0
	;;
  stop)
	log_begin_msg "Stopping XenBEE instance daemon..."
	"$daemon" stop --pidfile "$pidfile" $XBEINSTD_OPTS || log_end_msg 1
	log_end_msg 0
	;;

  reload|force-reload)
	log_begin_msg "Reloading XenBEE instance daemon..."
	check_logfile
	load_environ
	"$daemon" restart --pidfile "$pidfile" $XBEINSTD_OPTS || log_end_msg 1
	log_end_msg 0
	;;

  restart)
	log_begin_msg "Restarting XenBEE instance daemon..."
	check_logfile
	load_environ
	"$daemon" restart --pidfile "$pidfile" $XBEINSTD_OPTS || log_end_msg 1
	log_end_msg 0
	;;

  *)
	log_success_msg "Usage: /etc/init.d/xbeinstd {start|stop|reload|force-reload|restart}"
	exit 1
esac

exit 0
