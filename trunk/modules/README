* Files added/created:
	/var/lib/xenbeed/
	`+- xenbeed-socket
	/var/run/xenbeed/

PROBLEMS:
=========
	* VERY SEVERE:
		* starting of more than 4 instances at a time results in reboot of host

Design idea
===========
	xenbeed:

	InstanceManager (server side):
		* newInstance()
		* startInstance(instance-config)
			* config: mac, kernel, initrd, images
			* throws: InstanceCreationError
			* registers instance

submit job:
	1. check validity
	2. check security context
	3. create instance placeholder (create spool directory: /srv/xen-images/domains/[uuid]/)
	4. retrieve defined images to spool
	5. if all images available, assign to instance (kernel, root, swap, additional stuff)
		convention: sda1 - root, sda2 - swap, etc.
	6. check reservations
	7. if can be started: start instance


Communication:
==============

	* xenbee daemon connects to STOMP server and subscribes to the queue:
		/queue/xenbee/daemon

	* a client requesting some action etc. acts as follows:
		* create a UUID u
		* subscribe to /queue/xenbee/client/<u>
		* send messages to the daemon "destination: /queue/xenbee/daemon" and include the header field:
			client-id: <u>

	* answers are then sent from the daemon to the client using the described queue

	* Example:
		Client A: uuid() results in 912f2f3b-ba0d-4467-a72b-d6f932cea9c7
		Message:

		SEND
		destination: /queue/xenbee/daemon
		client-id: 912f2f3b-ba0d-4467-a72b-d6f932cea9c7
		
		hello

File Retrieval:
===============

	call regularly:
		* mgr.startInstances():
			* start startable instances
		* mgr.retrieveFiles():
			* retrieve pending files
	inst = mgr.newInstance(...)
	inst.addFile(...):
		push to queue
	
